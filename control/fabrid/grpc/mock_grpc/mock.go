// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/scionproto/scion/control/fabrid/grpc (interfaces: FabridControlPlaneFetcher)

// Package mock_grpc is a generated GoMock package.
package mock_grpc

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	addr "github.com/scionproto/scion/pkg/addr"
	experimental "github.com/scionproto/scion/pkg/proto/control_plane/experimental"
)

// MockFabridControlPlaneFetcher is a mock of FabridControlPlaneFetcher interface.
type MockFabridControlPlaneFetcher struct {
	ctrl     *gomock.Controller
	recorder *MockFabridControlPlaneFetcherMockRecorder
}

// MockFabridControlPlaneFetcherMockRecorder is the mock recorder for MockFabridControlPlaneFetcher.
type MockFabridControlPlaneFetcherMockRecorder struct {
	mock *MockFabridControlPlaneFetcher
}

// NewMockFabridControlPlaneFetcher creates a new mock instance.
func NewMockFabridControlPlaneFetcher(ctrl *gomock.Controller) *MockFabridControlPlaneFetcher {
	mock := &MockFabridControlPlaneFetcher{ctrl: ctrl}
	mock.recorder = &MockFabridControlPlaneFetcherMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockFabridControlPlaneFetcher) EXPECT() *MockFabridControlPlaneFetcherMockRecorder {
	return m.recorder
}

// GetRemoteMaps mocks base method.
func (m *MockFabridControlPlaneFetcher) GetRemoteMaps(arg0 context.Context, arg1 addr.IA) (*experimental.DetachedMapsResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRemoteMaps", arg0, arg1)
	ret0, _ := ret[0].(*experimental.DetachedMapsResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetRemoteMaps indicates an expected call of GetRemoteMaps.
func (mr *MockFabridControlPlaneFetcherMockRecorder) GetRemoteMaps(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRemoteMaps", reflect.TypeOf((*MockFabridControlPlaneFetcher)(nil).GetRemoteMaps), arg0, arg1)
}

// GetRemotePolicy mocks base method.
func (m *MockFabridControlPlaneFetcher) GetRemotePolicy(arg0 context.Context, arg1 addr.IA, arg2 uint32) (*experimental.RemotePolicyDescriptionResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRemotePolicy", arg0, arg1, arg2)
	ret0, _ := ret[0].(*experimental.RemotePolicyDescriptionResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetRemotePolicy indicates an expected call of GetRemotePolicy.
func (mr *MockFabridControlPlaneFetcherMockRecorder) GetRemotePolicy(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRemotePolicy", reflect.TypeOf((*MockFabridControlPlaneFetcher)(nil).GetRemotePolicy), arg0, arg1, arg2)
}
